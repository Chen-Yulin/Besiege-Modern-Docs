"use strict";(self.webpackChunkbesiege_modern_mod_docs=self.webpackChunkbesiege_modern_mod_docs||[]).push([[2024],{7291:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var i=n(4848),o=n(8453);const r={sidebar_position:2},s="Wire",c={id:"others/WIRE",title:"Wire",description:"Wire",source:"@site/docs/others/WIRE.md",sourceDirName:"others",slug:"/others/WIRE",permalink:"/Besiege-Modern-Docs/docs/others/WIRE",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Board",permalink:"/Besiege-Modern-Docs/docs/others/BOARD"}},a={},d=[{value:"How to Create a WIRE",id:"how-to-create-a-wire",level:2},{value:"Function of WIRE",id:"function-of-wire",level:2}];function h(e){const t={h1:"h1",h2:"h2",img:"img",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"wire",children:"Wire"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Wire",src:n(7243).A+"",width:"533",height:"468"})}),"\n",(0,i.jsx)(t.p,{children:"Wire is responsible for the connection between different circuit boards or executors."}),"\n",(0,i.jsx)(t.p,{children:"Work with INPUTPIN(input pin) and OUTPUTPIN(output pin)."}),"\n",(0,i.jsx)(t.h2,{id:"how-to-create-a-wire",children:"How to Create a WIRE"}),"\n",(0,i.jsx)(t.p,{children:"First you need to place both INPUTPIN and OUTPUTPIN. Then you can connect those two pins with wire."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"pin",src:n(391).A+"",width:"433",height:"271"})}),"\n",(0,i.jsx)(t.p,{children:"The unit at upper-right corner is the OUTPUTPIN."}),"\n",(0,i.jsx)(t.p,{children:"The unit at lower-left corner is the INPUTPIN."}),"\n",(0,i.jsx)(t.p,{children:"To create the wire, select WIRE block and click on top of INPUTPIN, then drag the wire to the top of OUTPUTPIN."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"pin wire",src:n(951).A+"",width:"958",height:"802"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"pin wire2",src:n(4437).A+"",width:"957",height:"725"})}),"\n",(0,i.jsx)(t.h2,{id:"function-of-wire",children:"Function of WIRE"}),"\n",(0,i.jsx)(t.p,{children:"Signal will flow from OUTPUTPIN to INPUTPIN."})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},7243:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/WIRE-6471b1aee6031079aa6861137b72ef85.png"},391:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/pin-b5311afe58f72f7398a6f687563b5c7a.png"},951:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/pin_wire-64659f60f70d5637a45afdf7f18f25a5.png"},4437:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/pin_wire2-fd00e11ffd85a22c3acc5d0bff5ca5a4.png"},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>c});var i=n(6540);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);