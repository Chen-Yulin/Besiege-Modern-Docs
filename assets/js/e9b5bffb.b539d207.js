"use strict";(self.webpackChunkbesiege_modern_mod_docs=self.webpackChunkbesiege_modern_mod_docs||[]).push([[7174],{920:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var o=i(4848),t=i(8453);const s={sidebar_position:3},c="WHILE",r={id:"logic-units/WHILE",title:"WHILE",description:"WHILE",source:"@site/docs/logic-units/WHILE.md",sourceDirName:"logic-units",slug:"/logic-units/WHILE",permalink:"/Besiege-Modern-Docs/docs/logic-units/WHILE",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"ALU",permalink:"/Besiege-Modern-Docs/docs/logic-units/ALU"},next:{title:"FOR",permalink:"/Besiege-Modern-Docs/docs/logic-units/FOR"}},d={},l=[{value:"Connection Sketch",id:"connection-sketch",level:2},{value:"Input Ports",id:"input-ports",level:2},{value:"Control Port",id:"control-port",level:2},{value:"Output Ports",id:"output-ports",level:2},{value:"Function",id:"function",level:2}];function h(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"while",children:"WHILE"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"WHILE",src:i(6718).A+"",width:"164",height:"130"})}),"\n",(0,o.jsx)(n.p,{children:"Conduct the conditional loop for the input."}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsxs)(n.p,{children:["Rather than ",(0,o.jsx)(n.code,{children:"while(condition){compute}"})," in other programming language, this unit is more similar to ",(0,o.jsx)(n.code,{children:"do{compute} while(condition)"})]})}),"\n",(0,o.jsx)(n.h2,{id:"connection-sketch",children:"Connection Sketch"}),"\n",(0,o.jsx)(n.p,{children:"The connection of WHILE should follow the following pattern."}),"\n",(0,o.jsx)(n.mermaid,{value:'block-beta\ncolumns 5\n    Data{{"Initial Data"}}\n    block:while_group:3\n    columns 3\n    space control1<["\\nControl\\n1"]>(down) space\n    block:i_group:1\n    columns 1\n    input1<["Input 1"]>(right) input2<["Input 2"]>(right)\n    end\n    WHILE\n    block:o_group:1\n    columns 1\n    output1<["Output 1"]>(right) output2<["Output 2"]>(right) output3<["Output 3"]>(right)\n\n    end\n    end\nCondition{{"Condition\\nProcess"}} space space Compute{{"Compute\\nProcess"}} space Result{{"Rest\\nof\\nCircuit"}}\nData--\x3einput1\nCompute--\x3einput2\noutput3--\x3eCompute\noutput2--\x3eCondition\nCondition--\x3econtrol1\noutput1--\x3eResult'}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"Compute Process"})," stands for the circuit manipulating the data for each loop, such as using ALU to perform self-increasing."]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["The output signal type of ",(0,o.jsx)(n.code,{children:"Compute Process"})," must be the same as the input signal type. Only the value can be modified."]})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"Condition Process"})," stands for the circuit responsible for judging whether the loop should go on."]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["The output signal type of ",(0,o.jsx)(n.code,{children:"Condition Process"})," must be bool."]})}),"\n",(0,o.jsx)(n.h2,{id:"input-ports",children:"Input Ports"}),"\n",(0,o.jsxs)(n.p,{children:["There are two input ports for while loop ",(0,o.jsx)(n.code,{children:"i1"})," and ",(0,o.jsx)(n.code,{children:"i2"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"i1"})," is responsibe for receiving the initial data for the loop. ",(0,o.jsx)(n.code,{children:"any"})," type"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"i2"})," is responsible for receiving the computed data to feed back into the loop. ",(0,o.jsx)(n.code,{children:"any"})," type"]}),"\n",(0,o.jsx)(n.h2,{id:"control-port",children:"Control Port"}),"\n",(0,o.jsxs)(n.p,{children:["There is one control ports ",(0,o.jsx)(n.code,{children:"c1"}),", with type ",(0,o.jsx)(n.code,{children:"bool"}),", responsible for controlling whether the loop should stop"]}),"\n",(0,o.jsx)(n.h2,{id:"output-ports",children:"Output Ports"}),"\n",(0,o.jsxs)(n.p,{children:["There are three output ports for while loop ",(0,o.jsx)(n.code,{children:"o1"}),", ",(0,o.jsx)(n.code,{children:"o2"}),", ",(0,o.jsx)(n.code,{children:"o3"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"o1"})," export the result data. ",(0,o.jsx)(n.code,{children:"any"})," type."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"o2"})," is responsibe for receiving the initial data for the loop. ",(0,o.jsx)(n.code,{children:"any"})," type."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"o3"})," is responsible for receiving the computed data to feed back into the loop. ",(0,o.jsx)(n.code,{children:"any"})," type."]}),"\n",(0,o.jsx)(n.h2,{id:"function",children:"Function"}),"\n",(0,o.jsxs)(n.p,{children:["When the signal at ",(0,o.jsx)(n.code,{children:"i1"})," changed, the same signal will be generated at ",(0,o.jsx)(n.code,{children:"o2"})," and ",(0,o.jsx)(n.code,{children:"o3"})," ",(0,o.jsx)(n.em,{children:(0,o.jsx)(n.strong,{children:"in order"})}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["When the signal at ",(0,o.jsx)(n.code,{children:"i2"})," changed, the WHILE will read the bool signal at ",(0,o.jsx)(n.code,{children:"c1"}),","]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["if true, the signal from ",(0,o.jsx)(n.code,{children:"i2"})," will be transmitted to ",(0,o.jsx)(n.code,{children:"o2"})," and ",(0,o.jsx)(n.code,{children:"o3"})," ",(0,o.jsx)(n.em,{children:(0,o.jsx)(n.strong,{children:"in order"})}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["if false, the signal from ",(0,o.jsx)(n.code,{children:"i2"})," will be transmitted to ",(0,o.jsx)(n.code,{children:"o1"})," (export the result)."]}),"\n"]}),"\n",(0,o.jsxs)(n.admonition,{type:"note",children:[(0,o.jsxs)(n.mdxAdmonitionTitle,{children:["Why ",(0,o.jsx)(n.code,{children:"IN ORDER"})," is so important"]}),(0,o.jsxs)(n.p,{children:["As mentioned in ",(0,o.jsx)(n.code,{children:"Timing"})," docs, once the signal at ",(0,o.jsx)(n.code,{children:"o2"})," is first updated, the chain reaction will go all the way to ",(0,o.jsx)(n.code,{children:"c1"}),". Then, ",(0,o.jsx)(n.code,{children:"o3"})," is updated, the chain reaction will go all the way to ",(0,o.jsx)(n.code,{children:"i2"}),". When ",(0,o.jsx)(n.code,{children:"i2"})," is updated, WHILE can use the newest condition infomation at ",(0,o.jsx)(n.code,{children:"c1"}),"."]})]}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsxs)(n.p,{children:["It is very likely that the ",(0,o.jsx)(n.code,{children:"Trigger Unit"})," in ",(0,o.jsx)(n.code,{children:"Initial Data"})," circuit trigger WHILE when other ",(0,o.jsx)(n.code,{children:"Trigger Unit"})," in ",(0,o.jsx)(n.code,{children:"Condition Process"}),"/",(0,o.jsx)(n.code,{children:"Compute Process"})," havn't initialized yet, so the very begining result of WHILE is very likely to be wrong. Use a Switch Sensor (",(0,o.jsx)(n.code,{children:"Trigger Unit"}),") with Mux at the end of ",(0,o.jsx)(n.code,{children:"Initial Data"})," circuit and manuelly change the Switch after simulation will solve the problem."]})})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},6718:(e,n,i)=>{i.d(n,{A:()=>o});const o=i.p+"assets/images/WHILE-330d781a73f591847a9e5154276dbacb.png"},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var o=i(6540);const t={},s=o.createContext(t);function c(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);